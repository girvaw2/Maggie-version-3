/* Auto-generated by genmsg_cpp for file /home/billy/robotics/maggie/components/common/dynamixel_hardware_interface/srv/SetVelocity.srv */
#ifndef DYNAMIXEL_HARDWARE_INTERFACE_SERVICE_SETVELOCITY_H
#define DYNAMIXEL_HARDWARE_INTERFACE_SERVICE_SETVELOCITY_H
#include <string>
#include <vector>
#include <map>
#include <ostream>
#include "ros/serialization.h"
#include "ros/builtin_message_traits.h"
#include "ros/message_operations.h"
#include "ros/time.h"

#include "ros/macros.h"

#include "ros/assert.h"

#include "ros/service_traits.h"




namespace dynamixel_hardware_interface
{
template <class ContainerAllocator>
struct SetVelocityRequest_ {
  typedef SetVelocityRequest_<ContainerAllocator> Type;

  SetVelocityRequest_()
  : velocity(0.0)
  {
  }

  SetVelocityRequest_(const ContainerAllocator& _alloc)
  : velocity(0.0)
  {
  }

  typedef double _velocity_type;
  double velocity;


  typedef boost::shared_ptr< ::dynamixel_hardware_interface::SetVelocityRequest_<ContainerAllocator> > Ptr;
  typedef boost::shared_ptr< ::dynamixel_hardware_interface::SetVelocityRequest_<ContainerAllocator>  const> ConstPtr;
  boost::shared_ptr<std::map<std::string, std::string> > __connection_header;
}; // struct SetVelocityRequest
typedef  ::dynamixel_hardware_interface::SetVelocityRequest_<std::allocator<void> > SetVelocityRequest;

typedef boost::shared_ptr< ::dynamixel_hardware_interface::SetVelocityRequest> SetVelocityRequestPtr;
typedef boost::shared_ptr< ::dynamixel_hardware_interface::SetVelocityRequest const> SetVelocityRequestConstPtr;


template <class ContainerAllocator>
struct SetVelocityResponse_ {
  typedef SetVelocityResponse_<ContainerAllocator> Type;

  SetVelocityResponse_()
  {
  }

  SetVelocityResponse_(const ContainerAllocator& _alloc)
  {
  }


  typedef boost::shared_ptr< ::dynamixel_hardware_interface::SetVelocityResponse_<ContainerAllocator> > Ptr;
  typedef boost::shared_ptr< ::dynamixel_hardware_interface::SetVelocityResponse_<ContainerAllocator>  const> ConstPtr;
  boost::shared_ptr<std::map<std::string, std::string> > __connection_header;
}; // struct SetVelocityResponse
typedef  ::dynamixel_hardware_interface::SetVelocityResponse_<std::allocator<void> > SetVelocityResponse;

typedef boost::shared_ptr< ::dynamixel_hardware_interface::SetVelocityResponse> SetVelocityResponsePtr;
typedef boost::shared_ptr< ::dynamixel_hardware_interface::SetVelocityResponse const> SetVelocityResponseConstPtr;

struct SetVelocity
{

typedef SetVelocityRequest Request;
typedef SetVelocityResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;
}; // struct SetVelocity
} // namespace dynamixel_hardware_interface

namespace ros
{
namespace message_traits
{
template<class ContainerAllocator> struct IsMessage< ::dynamixel_hardware_interface::SetVelocityRequest_<ContainerAllocator> > : public TrueType {};
template<class ContainerAllocator> struct IsMessage< ::dynamixel_hardware_interface::SetVelocityRequest_<ContainerAllocator>  const> : public TrueType {};
template<class ContainerAllocator>
struct MD5Sum< ::dynamixel_hardware_interface::SetVelocityRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "6d3b2ef8452c2fe21adb709618d2518f";
  }

  static const char* value(const  ::dynamixel_hardware_interface::SetVelocityRequest_<ContainerAllocator> &) { return value(); } 
  static const uint64_t static_value1 = 0x6d3b2ef8452c2fe2ULL;
  static const uint64_t static_value2 = 0x1adb709618d2518fULL;
};

template<class ContainerAllocator>
struct DataType< ::dynamixel_hardware_interface::SetVelocityRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "dynamixel_hardware_interface/SetVelocityRequest";
  }

  static const char* value(const  ::dynamixel_hardware_interface::SetVelocityRequest_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct Definition< ::dynamixel_hardware_interface::SetVelocityRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "float64 velocity\n\
\n\
";
  }

  static const char* value(const  ::dynamixel_hardware_interface::SetVelocityRequest_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator> struct IsFixedSize< ::dynamixel_hardware_interface::SetVelocityRequest_<ContainerAllocator> > : public TrueType {};
} // namespace message_traits
} // namespace ros


namespace ros
{
namespace message_traits
{
template<class ContainerAllocator> struct IsMessage< ::dynamixel_hardware_interface::SetVelocityResponse_<ContainerAllocator> > : public TrueType {};
template<class ContainerAllocator> struct IsMessage< ::dynamixel_hardware_interface::SetVelocityResponse_<ContainerAllocator>  const> : public TrueType {};
template<class ContainerAllocator>
struct MD5Sum< ::dynamixel_hardware_interface::SetVelocityResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "d41d8cd98f00b204e9800998ecf8427e";
  }

  static const char* value(const  ::dynamixel_hardware_interface::SetVelocityResponse_<ContainerAllocator> &) { return value(); } 
  static const uint64_t static_value1 = 0xd41d8cd98f00b204ULL;
  static const uint64_t static_value2 = 0xe9800998ecf8427eULL;
};

template<class ContainerAllocator>
struct DataType< ::dynamixel_hardware_interface::SetVelocityResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "dynamixel_hardware_interface/SetVelocityResponse";
  }

  static const char* value(const  ::dynamixel_hardware_interface::SetVelocityResponse_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct Definition< ::dynamixel_hardware_interface::SetVelocityResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "\n\
\n\
\n\
";
  }

  static const char* value(const  ::dynamixel_hardware_interface::SetVelocityResponse_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator> struct IsFixedSize< ::dynamixel_hardware_interface::SetVelocityResponse_<ContainerAllocator> > : public TrueType {};
} // namespace message_traits
} // namespace ros

namespace ros
{
namespace serialization
{

template<class ContainerAllocator> struct Serializer< ::dynamixel_hardware_interface::SetVelocityRequest_<ContainerAllocator> >
{
  template<typename Stream, typename T> inline static void allInOne(Stream& stream, T m)
  {
    stream.next(m.velocity);
  }

  ROS_DECLARE_ALLINONE_SERIALIZER;
}; // struct SetVelocityRequest_
} // namespace serialization
} // namespace ros


namespace ros
{
namespace serialization
{

template<class ContainerAllocator> struct Serializer< ::dynamixel_hardware_interface::SetVelocityResponse_<ContainerAllocator> >
{
  template<typename Stream, typename T> inline static void allInOne(Stream& stream, T m)
  {
  }

  ROS_DECLARE_ALLINONE_SERIALIZER;
}; // struct SetVelocityResponse_
} // namespace serialization
} // namespace ros

namespace ros
{
namespace service_traits
{
template<>
struct MD5Sum<dynamixel_hardware_interface::SetVelocity> {
  static const char* value() 
  {
    return "6d3b2ef8452c2fe21adb709618d2518f";
  }

  static const char* value(const dynamixel_hardware_interface::SetVelocity&) { return value(); } 
};

template<>
struct DataType<dynamixel_hardware_interface::SetVelocity> {
  static const char* value() 
  {
    return "dynamixel_hardware_interface/SetVelocity";
  }

  static const char* value(const dynamixel_hardware_interface::SetVelocity&) { return value(); } 
};

template<class ContainerAllocator>
struct MD5Sum<dynamixel_hardware_interface::SetVelocityRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "6d3b2ef8452c2fe21adb709618d2518f";
  }

  static const char* value(const dynamixel_hardware_interface::SetVelocityRequest_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct DataType<dynamixel_hardware_interface::SetVelocityRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "dynamixel_hardware_interface/SetVelocity";
  }

  static const char* value(const dynamixel_hardware_interface::SetVelocityRequest_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct MD5Sum<dynamixel_hardware_interface::SetVelocityResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "6d3b2ef8452c2fe21adb709618d2518f";
  }

  static const char* value(const dynamixel_hardware_interface::SetVelocityResponse_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct DataType<dynamixel_hardware_interface::SetVelocityResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "dynamixel_hardware_interface/SetVelocity";
  }

  static const char* value(const dynamixel_hardware_interface::SetVelocityResponse_<ContainerAllocator> &) { return value(); } 
};

} // namespace service_traits
} // namespace ros

#endif // DYNAMIXEL_HARDWARE_INTERFACE_SERVICE_SETVELOCITY_H

